<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.codex.kosiea.dao.UserDAO">

	<select id="userChk" parameterType="map" resultType="map">
		SELECT *
		  FROM MEMBERS
		 WHERE NAME = #{username}
		   AND TEL = ${tel}
           AND PASSWORD = ${password}
	</select>

    <!-- 로그인한 사용자 정보 -->
	<select id="findByUserID" resultType="User" parameterType="string">
		SELECT *
		  FROM MEMBERS
		 WHERE REPLACE(TEL, '-', '') = REPLACE(#{username}, '-', '')
	</select>

	<!-- 계정 등록 -->
	<insert id="insertUser" parameterType="map">
		INSERT INTO MEMBERS
		SET PASSWORD = #{password}
		  , NAME = #{name}
		  , KOB = #{kob}
		  , GENDER = #{gender}
		  , COMPANY = #{company}
		  , POSITION = #{position}
		  , BIRTHDAY = #{birthday}
		<if test="lunar_birthday != null and lunar_birthday != ''">
		  , LUNAR = #{lunar_birthday}
		</if>
		  , LUNAR_YN = #{lunar_yn}
		  , ADDR1 = #{addr1}
		  , ADDR2 = #{addr2}
		  , TEL = #{tel}
		  , FILE_LOCATION = #{file_location}
		  , FILE_LOCATION2 = #{file_location2}
		  , GIFT_YN = #{gift_yn}
		  , ROLE_CD = '1'
		  , ROLE_NM = '사용자'
		  , CREATE_DT = CURRENT_TIMESTAMP
		  , UPDATE_DT = CURRENT_TIMESTAMP
	</insert>

	<select id="idFailYnCheck" resultType="int" parameterType="map">
		SELECT COUNT(*) AS cnt
		  FROM MEMBERS
		 WHERE REPLACE(TEL, '-', '') = REPLACE(#{tel}, '-', '')
	</select>

	<select id="failPasswordCheck" resultType="String" parameterType="map">
		SELECT PASSWORD
		  FROM MEMBERS
		 WHERE REPLACE(TEL, '-', '') = REPLACE(#{tel}, '-', '')
	</select>

	<select id="selectUserInfo" resultType="User" parameterType="map">
		SELECT *
		  FROM MEMBERS
		 WHERE NAME = #{NAME}
		   AND TEL = #{TEL}
	</select>

	<select id="selectUserObject" resultType="map" parameterType="String">
		SELECT NO
			 , NAME
			 , PASSWORD
			 , GENDER
			 , KOB
			 , COMPANY
			 , POSITION
			 , BIRTHDAY
			 , ADDR1
			 , ADDR2
			 , IFNULL(LUNAR, '') AS LUNAR
			 , IFNULL(LUNAR_YN, '') AS LUNAR_YN
			 , TEL
			 , TYPE1
			 , TYPE2
			 , TYPE3
			 , PAYDATE
			 , DUES
			 , ETC1
			 , ETC2
			 , IDNUMBER
			 , STATUS
			 , MBAMT
			 , IFNULL(FILE_LOCATION, '') AS FILE_LOCATION
			 , IFNULL(FILE_LOCATION2, '') AS FILE_LOCATION2
			 , IFNULL(GIFT_YN, '') AS GIFT_YN
			 , ROLE_CD
			 , ROLE_NM
		  FROM MEMBERS
		 WHERE TEL = #{TEL}
	</select>

	<!-- 계정 등록 -->
	<insert id="updateUser" parameterType="map">
		UPDATE MEMBERS
		   SET KOB = #{kob}
		     , GENDER = #{gender}
			 <if test="password != null and password != ''">
		     , PASSWORD = #{password}
			 </if>
		     , COMPANY = #{company}
		     , POSITION = #{position}
		     , BIRTHDAY = #{birthday}
		     <if test="lunar_birthday != null and lunar_birthday != ''">
		     , LUNAR = #{lunar_birthday}
		     </if>
		     , LUNAR_YN = IFNULL(#{lunar_yn}, '0')
		     , ADDR1 = #{addr1}
		     , ADDR2 = #{addr2}
		     , TEL = #{tel}
			<if test="file_location != null and file_location != ''">
		     , FILE_LOCATION = #{file_location}
			</if>
		    <if test="file_location2 != null and file_location2 != ''">
		     , FILE_LOCATION2 = #{file_location2}
		    </if>
		     , GIFT_YN = #{gift_yn}
		     , UPDATE_DT = CURRENT_TIMESTAMP
		 WHERE NAME = #{loginUserName}
		   AND TEL = #{loginUserTel}
	</insert>

	<insert id="insertLog" parameterType="map">
		INSERT INTO MEMBER_LOG
		SET NAME = #{name}
		  , PASSWORD = #{password}
		  , KOB = #{kob}
		  , GENDER = #{gender}
		  , COMPANY = #{company}
		  , POSITION = #{position}
		  , BIRTHDAY = #{birthday}
		  <if test="lunar_birthday != null and lunar_birthday != ''">
		  , LUNAR = #{lunar_birthday}
		  </if>
		  , LUNAR_YN = IFNULL(#{lunar_yn}, '0')
		  , ADDR1 = #{addr1}
		  , ADDR2 = #{addr2}
		  , TEL = #{tel}
		  , FILE_LOCATION = #{file_location}
		  , FILE_LOCATION2 = #{file_location2}
		  , GIFT_YN = #{gift_yn}
		  , IP = #{access_ip}
		  , CREATE_DT = CURRENT_TIMESTAMP
	</insert>

	<select id="selectUserList" resultType="User" parameterType="map">
		SELECT *
		  FROM MEMBERS
		<where>
			<if test="search != null and search != ''">
				AND ( NAME LIKE CONCAT('%', #{search}, '%')
				OR COMPANY LIKE CONCAT('%', #{search}, '%')
				OR POSITION LIKE CONCAT('%', #{search}, '%')
				)
			</if>
		</where>
		 ORDER BY NAME
	</select>

</mapper>